
var FileSystem = require('fs'),
	twig = require('twig').twig;

/**
 * A class that allows us to collect
 * html templates and store them in relation to a given name.
 * @class Templates
 * @memberOf module:edu/dat/Web
 * @constructor
 */
var Templates;

Templates = (function() {

	function Templates()
	{

		this.views = {};

	};

	/**
	 * Add a template to the list.
	 * @instance
	 * @memberOf module:edu/dat/Web.Templates
	 * @method add
	 * @param {String} name     The name of the template.
	 * @param {String} filePath A path to the template file on the hard drive.
	 */
	Templates.prototype.add = function(name, filePath)
	{
		this.views[name] = twig({
		    data: FileSystem.readFileSync(filePath, "utf8")
		});
		return this;
	};

	/**
	 * Render out the html for a template that matches the name provided.
	 * @instance
	 * @memberOf module:edu/dat/Web.Templates
	 * @method render
	 * @param  {String} name The name of the template.
	 * @param  {Object} data An object containing a key => value list of all 
	 *                       data that needs to be rendered into the html.
	 * @return {String}      The rendered Html
	 */
	Templates.prototype.render = function(name, data)
	{
		return this.views[name].render(data);
	};

	return Templates;

})();


module.exports = Templates;