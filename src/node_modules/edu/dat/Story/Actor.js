/**
 * This class allows us to create story actors
 * that can contain dialogue.
 * @class Actor
 * @memberOf module:edu/dat/Story
 * @constructor
 */
var Actor;

Actor = (function() {

	function Actor()
	{
		this.name = "";
		this.key = "";
		this.description = "";
		this.dialogue = false;
	};

	/**
	 * Set the name of this actor.
	 * @instance
	 * @memberOf module:edu/dat/Story.Actor
	 * @method setName
	 * @param {String} name This actors name.
	 */
	Actor.prototype.setName = function(name)
	{
		this.name = name;
		return this;
	};

	/**
	 * Get the name of this actor.
	 * @instance
	 * @memberOf module:edu/dat/Story.Actor
	 * @method getName
	 * @return {String} This actors name.
	 */
	Actor.prototype.getName = function()
	{
		return this.name;
	};

	/**
	 * Set the url-firendly name for this actor.
	 * @instance
	 * @memberOf module:edu/dat/Story.Actor
	 * @method setKey
	 * @param {String} key The url-friendly name for this actor.
	 * @return {module:edu/dat/Story.Actor} This actor.
	 */
	Actor.prototype.setKey = function(key)
	{
		this.key = key;
		return this;
	};

	/**
	 * Get the url-firendly name for this actor.
	 * @instance
	 * @memberOf module:edu/dat/Story.Actor
	 * @method getKey
	 * @return {String} The url-friendly name for this actor.
	 */
	Actor.prototype.getKey = function()
	{
		return this.key;
	};

	/**
	 * Set this actors description.
	 * @instance
	 * @memberOf module:edu/dat/Story.Actor
	 * @method setDescription
	 * @param {String} description The description to use.
	 * @return {module:edu/dat/Story.Actor} This actor.
	 */
	Actor.prototype.setDescription = function(description)
	{
		this.description = description;
		return this;
	};

	/**
	 * Get this actors description
	 * @instance
	 * @memberOf module:edu/dat/Story.Actor
	 * @method getDescription
	 * @return {String} This actor's description.
	 */
	Actor.prototype.getDescription = function()
	{
		return this.description;
	};

	/**
	 * Set the dialogue of this character.
	 * @instance
	 * @memberOf module:edu/dat/Story.Actor
	 * @method setDialogue
	 * @param {Array} dialogue [description]
	 * @return {module:edu/dat/Story.Actor} This actor.
	 */
	Actor.prototype.setDialogue = function(dialogue)
	{
		this.dialogue = dialogue;
		return this;
	};

	/**
	 * Get the dialogue of this character.
	 * @instance
	 * @memberOf module:edu/dat/Story.Actor
	 * @method getDialogue
	 * @return {Array} [description]
	 */
	Actor.prototype.getDialogue = function()
	{
		return this.dialogue;
	};

	/**
	 * Load data from a generic object into this actor.
	 * @instance
	 * @memberOf module:edu/dat/Story.Actor
	 * @method loadData
	 * @param  {Object} obj The object containing the data to load.
	 * @param  {String} key A url-friendly name for this actor
	 * @return {module:edu/dat/Story.Actor} This actor.
	 */
	Actor.prototype.loadData = function(obj, key)
	{
		this.setKey(key);
		this.setName(obj.name);
		this.setDescription(obj.description);

		if(undefined !== typeof obj.dialogue) {
			this.setDialogue(obj.dialogue);
			delete obj.dialogue;
		} else {
			this.setDialogue(false);
		}
	
		return this;

	};

	return Actor;

})();

module.exports = Actor;