var Player;

Player = (function() {

	/**
	 * This class allows us to store data about the player that 
 	 * persists between http requests.
	 * @class Actor
	 * @memberOf module:edu/dat/Story
	 * @constructor
	 * @param {Request} request The http request object.
	 */
	function Player(request)
	{
		this.keyName = '_player';
		this.request = request;
		this.data = {};
		this.saveSession();
	};

	/**
	 * Do we have a value for a given key.
	 * @instance
	 * @memberOf module:edu/dat/Story.Player
	 * @method has
	 * @param  {String}  key The key string to check for.
	 * @return {Boolean}     True or false depending on whether a value exists.
	 */
	Player.prototype.has = function(key)
	{
		return !("undefined" == typeof this.data[key]);
	};

	/**
	 * Get the value for the provided key.
	 * @instance
	 * @memberOf module:edu/dat/Story.Player
	 * @method get
	 * @param  {String} key The key string to check for.
	 * @return {Mixed}      The value.
	 */
	Player.prototype.get = function(key)
	{
		return this.data[key];
	};

	/**
	 * Set the value for the provided key.
	 * @instance
	 * @memberOf module:edu/dat/Story.Player
	 * @method set
	 * @param {String} key   The key string to check for.
	 * @param {Mixed}  value The value that will correspond to the provided key.
	 * @return {module:edu/dat/Story.Player} This player object.
	 */
	Player.prototype.set = function(key, value)
	{
		this.data[key] = value;
		this.request.session[this.keyName][key] = value;
		return this;
	};

	/**
	 * Save all data into the http session cookie.
	 * @instance
	 * @memberOf module:edu/dat/Story.Player
	 * @method saveSession
	 * @return {module:edu/dat/Story.Player} This player object.
	 */
	Player.prototype.saveSession = function()
	{
		if("undefined" == typeof this.request.session[this.keyName]) {
			this.purgeSession();
		}

		for(key in this.data) {
			this.request.session[this.keyName][key] = this.data[key];
		}

		return this;
	};

	/**
	 * Purge the http session cookie of all data.
	 * @instance
	 * @memberOf module:edu/dat/Story.Player
	 * @method purgeSession
	 * @return {module:edu/dat/Story.Player} This player object.
	 */
	Player.prototype.purgeSession = function()
	{
		this.request.session[this.keyName] = [];
	};

	return Player;

})();

module.exports = Player;